{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nconst useHttp = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setError(null);\n    console.log(\"ulaz\");\n    setIsLoading(true);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData && applyData(data);\n      console.log(\"izlaz\");\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message || \"Something is wrong\");\n      setIsLoading(false);\n    }\n  }, []);\n  return {\n    sendRequest,\n    error,\n    isLoading\n  };\n};\n_s(useHttp, \"uvvboPrLJvHZfv0/cCnJccWftbM=\");\nexport default useHttp;","map":{"version":3,"names":["useCallback","useState","useHttp","error","setError","isLoading","setIsLoading","sendRequest","requestConfig","applyData","console","log","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","message"],"sources":["C:/Users/Nebojsa/Desktop/ReactMeals with API/src/hooks/use-http.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\r\n    setError(null);\r\n    console.log(\"ulaz\");\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method ? requestConfig.method : \"GET\",\r\n        headers: requestConfig.headers ? requestConfig.headers : {},\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      applyData && applyData(data);\r\n      console.log(\"izlaz\");\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setError(error.message || \"Something is wrong\");\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    sendRequest,\r\n    error,\r\n    isLoading,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMM,WAAW,GAAGP,WAAW,CAAC,OAAOQ,aAAa,EAAEC,SAAS,KAAK;IAClEL,QAAQ,CAAC,IAAI,CAAC;IACdM,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnBL,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACL,aAAa,CAACM,GAAG,EAAE;QAC9CC,MAAM,EAAEP,aAAa,CAACO,MAAM,GAAGP,aAAa,CAACO,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAER,aAAa,CAACQ,OAAO,GAAGR,aAAa,CAACQ,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAET,aAAa,CAACS,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACX,aAAa,CAACS,IAAI,CAAC,GAAG;MAClE,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,EAAE;MAClCd,SAAS,IAAIA,SAAS,CAACa,IAAI,CAAC;MAC5BZ,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpBL,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACqB,OAAO,IAAI,oBAAoB,CAAC;MAC/ClB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLC,WAAW;IACXJ,KAAK;IACLE;EACF,CAAC;AACH,CAAC;AAAC,GAlCIH,OAAO;AAoCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module"}